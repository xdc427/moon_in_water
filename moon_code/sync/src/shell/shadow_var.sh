varfile="$1"
name="$2"
block_num="$(wc -l "$varfile" | cut -f1 -d' ' )"

echo "void version_""$name""_init()"
echo "{"
echo "	mem_block cur_block;"
echo "	version_info cur_version;"
echo "	shadow_type new_shadow;"
echo "	id_pair pair, tmp;"
echo "	int i;"
echo ""
echo "	cur_version = NULL;"
echo "  new_shadow = hash_search( shadow_head, \"$name\", sizeof( shadow_type_s ) );"
echo "  new_shadow->struct_types = shadow_struct_""$name""_init( );"
echo "	pthread_mutex_init( &new_shadow->entity_mutex, NULL );"
echo "	cur_version = version_surface_malloc( $block_num );"
echo "	if( cur_version == NULL ){"
echo "		MOON_PRINT_MAN( ERROR, \"malloc error!\" );"
echo "		return;"
echo "	}"
echo "	pair = cur_version->order_id;"
awk -v block_num="$block_num" -v name="$name" -F: 'BEGIN{
	id=1
	print "\tfor( i = 0, tmp = pair; i < "block_num"; i++, tmp++ ){"
	print "\t\ttmp->addr = malloc( sizeof( mem_block_s ) );"
	print "\t\tif( tmp->addr == NULL ){"
	print "\t\t\tMOON_PRINT_MAN( ERROR, \"malloc error!\" );"
	print "\t\t\tgoto error;"
	print "\t\t}"
	print "\t}"
} 
{
	print "\tpair->id = "id";"
	print "\tcur_block = pair->addr;"
	print "\tcur_block->id = "id++";"
	print "\tcur_block->version = 0;"
	print "\tcur_block->virtual_addr = get_"name"_"$2"_addr();"
	print "\tcur_block->is_del = 0;"
	print "\tcur_block->is_root = 1;"
	print "\tcur_block->data = ( char * )get_"name"_"$2"_addr();"
	print "\tcur_block->type_num = get_"name"_"$2"_len();"
	print "\tcur_block->data_len = get_"name"_"$2"_size();"
	print "\tcur_block->type_id = find_type( new_shadow->struct_types, \""$1"\" );"
	print "\tif( cur_block->type_id < 0 ){"
	print "\t\tMOON_PRINT_MAN( ERROR, \"can,t find type!\" );"
	print "\t\tgoto error;"
	print "\t}"
	print "\tpair++;"
done
}' "$varfile"
echo "	cur_version->order_addr = sort_addr_id( cur_version->order_id, $block_num );"
echo "	if( cur_version->order_addr == NULL ){"
echo "		MOON_PRINT_MAN( ERROR, \"create sorted addr array error!\" );"
echo "		goto error;"
echo "	}"
echo "	new_shadow->init_version = cur_version;"
echo "	return;"
echo "error:"
echo "	version_surface_free( cur_version );"
echo "}"

